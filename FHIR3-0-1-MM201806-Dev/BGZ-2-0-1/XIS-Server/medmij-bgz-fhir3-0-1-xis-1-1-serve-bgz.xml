<?xml version="1.0" encoding="UTF-8"?>
<TestScript xmlns="http://hl7.org/fhir">
    <id value="medmij-bgz-fhir3-0-1-xis-1-1-serve-bgz-xml" />
    <url value="http://nictiz.nl/fhir/fhir3-0-1/TestScript/medmij-bgz-fhir3-0-1-xis-1-1-serve-bgz-xml"/>  
    <name value="Nictiz MedMij BgZ - XIS Server - Scenario 1.1 - Serve BgZ - XML"/>  
    <status value="active"/>  
    <date value="2018-07-30"/>  
    <publisher value="Nictiz"/>  
    <contact> 
        <name value="Nictiz"/>  
        <telecom> 
            <system value="email"/>  
            <value value="kwalificatie@nictiz.nl"/>  
            <use value="work"/> 
        </telecom> 
    </contact>  
    <description value="MedMij BgZ for FHIR STU3 (v3.0.1) - Scenario 1.1: Serve BgZ - XML Format - All BgZ resources of person 1. Response consists of 55 resources."/>  
    <copyright value="Â© Nictiz 2018"/>  
    
    <fixture id="patient-token-fixture">
        <resource>
            <reference value="../_reference/resources/medmij-bgz-fhir3-0-1-Patient-Token-kwalificatie1.xml"/>
        </resource>
    </fixture>
    
    <fixture id="patient1-fixture"> 
        <resource> 
        	<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-patient-ts-01.xml"/> 
        </resource> 
    </fixture>  
	<fixture id="practitionerrole1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-practitionerrole-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="practitioner1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-practitioner-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="practitioner2-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-practitioner-ts-02.xml" />
		</resource>
	</fixture>
	<fixture id="procedure1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-procedure-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="procedure2-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-procedure-ts-02.xml" />
		</resource>
	</fixture>
	<fixture id="procedurerequest1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-procedurerequest-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="relatedperson1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-relatedperson-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="specimen1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-specimen-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="tobaccouse1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-tobaccouse-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="treatmentdirective1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-treatmentdirective-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="vaccination1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-vaccination-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="vaccinationrequest1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-vaccinationrequest-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="advancedirective1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-advancedirective-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="alcoholuse1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-alcoholuse-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="allergyintolerance1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-allergyintolerance-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="appointment1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-appointment-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="bloodpressure1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-bloodpressure-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="bodyheight1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-bodyheight-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="bodyweight1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-bodyweight-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="condition1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-condition-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="condition2-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-condition-ts-02.xml" />
		</resource>
	</fixture>
	<fixture id="condition3-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-condition-ts-03.xml" />
		</resource>
	</fixture>
	<fixture id="condition4-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-condition-ts-04.xml" />
		</resource>
	</fixture>
	<fixture id="condition5-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-condition-ts-05.xml" />
		</resource>
	</fixture>
	<fixture id="condition6-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-condition-ts-06.xml" />
		</resource>
	</fixture>
	<fixture id="coverage1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-coverage-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="coverage2-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-coverage-ts-02.xml" />
		</resource>
	</fixture>
	<fixture id="device1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-device-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="device2-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-device-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="druguse1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-druguse-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="encounter1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-encounter-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="flag1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-flag-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="functionalstatus-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-functionalstatus-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="healthcareprovider1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-healthcareprovider-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="healthcareprovider2-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-healthcareprovider-ts-02.xml" />
		</resource>
	</fixture>
	<fixture id="healthcareprovider3-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-healthcareprovider-ts-03.xml" />
		</resource>
	</fixture>
	<fixture id="insurer1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-insurer-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="labresult1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-labresult-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="livingsituation1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-livingsituation-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="medicaldeviceusestatement1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-medicaldeviceusestatement-ts-01.xml" />
		</resource>
	</fixture>
	<fixture id="nutritionadvice1-fixture">
		<resource>
			<reference value="../_reference/resources/medmij-bgz-fhir3-0-1-nutritionadvice-ts-01.xml" />
		</resource>
	</fixture>
    <fixture id="medicationuse1-fixture">
        <resource>
            <reference value="../_reference/resources/medmij-bgz-fhir3-0-1-medicationuse-ts-01.xml" />
        </resource>
    </fixture>
    <fixture id="medicationagreement1-fixture">
        <resource>
            <reference value="../_reference/resources/medmij-bgz-fhir3-0-1-medicationagreement-ts-01.xml" />
        </resource>
    </fixture>
    <fixture id="administrationagreement1-fixture">
        <resource>
            <reference value="../_reference/resources/medmij-bgz-fhir3-0-1-administrationagreement-ts-01.xml" />
        </resource>
    </fixture>
    
    <fixture id="devicerequest1-fixture">
        <resource>
            <reference value="../_reference/resources/medmij-bgz-fhir3-0-1-devicerequest-ts-01.xml" />
        </resource>
    </fixture>
    <fixture id="device3-fixture">
        <resource>
            <reference value="../_reference/resources/medmij-bgz-fhir3-0-1-device-ts-03.xml" />
        </resource>
    </fixture>
    
    <profile id="Bundle-profile"> 
        <reference value="http://hl7.org/fhir/StructureDefinition/Bundle"/> 
    </profile>  
    
    <variable>
        <name value="patient-token-id"/>
        <expression value="Patient.id"/>
        <sourceId value="patient-token-fixture"/>
    </variable>
    <variable> 
        <name value="patient1-id"/>  
        <expression value="Patient.id"/>
        <sourceId value="patient1-fixture"/> 
    </variable> 
	
    <variable> 
        <name value="patient-profile"/>  
        <expression value="Patient.meta.profile"/>
        <sourceId value="patient1-fixture"/> 
    </variable> 
    <variable> 
        <name value="practitionerrole-profile"/>  
        <expression value="PractitionerRole.meta.profile"/>
        <sourceId value="practitionerrole1-fixture"/> 
    </variable> 
    <variable> 
        <name value="practitioner-profile"/>  
        <expression value="Practitioner.meta.profile"/>
        <sourceId value="practitioner1-fixture"/> 
    </variable>
    <variable> 
        <name value="procedure-profile"/>  
        <expression value="Procedure.meta.profile"/>
        <sourceId value="procedure1-fixture"/> 
    </variable> 
    <variable> 
        <name value="procedurerequest-profile"/>  
        <expression value="ProcedureRequest.meta.profile"/>
        <sourceId value="procedurerequest1-fixture"/> 
    </variable> 
    <variable> 
        <name value="relatedperson-profile"/>  
        <expression value="RelatedPerson.meta.profile"/>
        <sourceId value="relatedperson1-fixture"/> 
    </variable> 
    <variable> 
        <name value="specimen-profile"/>  
        <expression value="Specimen.meta.profile"/>
        <sourceId value="specimen1-fixture"/> 
    </variable> 
    <variable> 
        <name value="tobaccouse-profile"/>  
        <expression value="Observation.meta.profile"/>
        <sourceId value="tobaccouse1-fixture"/> 
    </variable> 
    <variable> 
        <name value="treatmentdirective-profile"/>  
        <expression value="Consent.meta.profile"/>
        <sourceId value="treatmentdirective1-fixture"/> 
    </variable> 
    <variable> 
        <name value="vaccination-profile"/>  
        <expression value="Immunization.meta.profile"/>
        <sourceId value="vaccination1-fixture"/> 
    </variable> 
    <variable> 
        <name value="vaccinationrequest-profile"/>  
        <expression value="ImmunizationRecommendation.meta.profile"/>
        <sourceId value="vaccinationrequest1-fixture"/> 
    </variable> 
    <variable> 
        <name value="advancedirective-profile"/>  
        <expression value="Consent.meta.profile"/>
        <sourceId value="advancedirective1-fixture"/> 
    </variable> 
    <variable> 
        <name value="alcoholuse-profile"/>  
        <expression value="Observation.meta.profile"/>
        <sourceId value="alcoholuse1-fixture"/> 
    </variable> 
    <variable> 
        <name value="allergyintolerance-profile"/>  
        <expression value="AllergyIntolerance.meta.profile"/>
        <sourceId value="allergyintolerance1-fixture"/> 
    </variable> 
    <variable> 
        <name value="appointment-profile"/>  
        <expression value="Appointment.meta.profile"/>
        <sourceId value="appointment1-fixture"/> 
    </variable> 
    <variable> 
        <name value="bloodpressure-profile"/>  
        <expression value="Observation.meta.profile"/>
        <sourceId value="bloodpressure1-fixture"/> 
    </variable> 
    <variable> 
        <name value="bodyheight-profile"/>  
        <expression value="Observation.meta.profile"/>
        <sourceId value="bodyheight1-fixture"/> 
    </variable> 
    <variable> 
        <name value="bodyweight-profile"/>  
        <expression value="Observation.meta.profile"/>
        <sourceId value="bodyweight1-fixture"/> 
    </variable> 
    <variable> 
        <name value="condition-profile"/>  
        <expression value="Condition.meta.profile"/>
        <sourceId value="condition1-fixture"/> 
    </variable> 
    <variable> 
        <name value="coverage-profile"/>  
        <expression value="Coverage.meta.profile"/>
        <sourceId value="coverage1-fixture"/> 
    </variable> 
    <variable> 
        <name value="device-profile"/>  
        <expression value="Device.meta.profile"/>
        <sourceId value="device1-fixture"/> 
    </variable> 
    <variable> 
        <name value="druguse-profile"/>  
        <expression value="Observation.meta.profile"/>
        <sourceId value="druguse1-fixture"/> 
    </variable> 
    <variable> 
        <name value="encounter-profile"/>  
        <expression value="Encounter.meta.profile"/>
        <sourceId value="encounter1-fixture"/> 
    </variable> 
    <variable> 
        <name value="flag-profile"/>  
        <expression value="Flag.meta.profile"/>
        <sourceId value="flag1-fixture"/> 
    </variable> 
    <variable> 
        <name value="functionalstatus-profile"/>  
        <expression value="Observation.meta.profile"/>
        <sourceId value="functionalstatus-fixture"/> 
    </variable> 
    <variable> 
        <name value="healthcareprovider-profile"/>  
        <expression value="Organization.meta.profile"/>
        <sourceId value="healthcareprovider1-fixture"/> 
    </variable> 
    <variable> 
        <name value="healthcareprovider3-profile"/>  
        <expression value="Organization.meta.profile"/>
        <sourceId value="healthcareprovider3-fixture"/> 
    </variable> 
    <variable> 
        <name value="insurer-profile"/>  
        <expression value="Organization.meta.profile"/>
        <sourceId value="insurer1-fixture"/> 
    </variable> 
    <variable> 
        <name value="labresult-profile"/>  
        <expression value="Observation.meta.profile"/>
        <sourceId value="labresult1-fixture"/> 
    </variable> 
    <variable> 
        <name value="livingsituation-profile"/>  
        <expression value="Observation.meta.profile"/>
        <sourceId value="livingsituation1-fixture"/> 
    </variable> 
    <variable> 
        <name value="medicaldeviceusestatement-profile"/>  
        <expression value="DeviceUseStatement.meta.profile"/>
        <sourceId value="medicaldeviceusestatement1-fixture"/> 
    </variable>  
    <variable> 
        <name value="nutritionadvice-profile"/>  
        <expression value="NutritionOrder.meta.profile"/>
        <sourceId value="nutritionadvice1-fixture"/> 
    </variable> 
    <variable> 
        <name value="medicationuse-profile"/>  
        <expression value="MedicationStatement.meta.profile"/>
        <sourceId value="medicationuse1-fixture"/> 
    </variable> 
    <variable> 
        <name value="medicationagreement-profile"/>  
        <expression value="MedicationRequest.meta.profile"/>
        <sourceId value="medicationagreement1-fixture"/> 
    </variable> 
    <variable> 
        <name value="administrationagreement-profile"/>  
        <expression value="MedicationDispense.meta.profile"/>
        <sourceId value="administrationagreement1-fixture"/> 
    </variable> 
    <variable> 
        <name value="devicerequest-profile"/>  
        <expression value="DeviceRequest.meta.profile"/>
        <sourceId value="devicerequest1-fixture"/> 
    </variable>    

	
	<!-- No Setup -->

    <test id="01-ServeBgZ-Patient"> 
        <name value="01-ServeBgZ-Patient"/>  
        <description value="Test XIS server search operation for known Patient resource of person 1 including the patient's general practitioner. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 Patient resource entry and 1 Practitioner resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="Patient"/>  
                <description value="XIS Server search operation for known Patient, including the referenced practitioner resource."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="?_include=Patient:general-practitioner"/> 
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 2 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 2"/>  
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${patient-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test> 
    <test id="02-ServeBgZ-Payer"> 
        <name value="02-ServeBgZ-Payer"/>  
        <description value="Test XIS Server search operation for known Coverage resource of person 1 including the insurer in an Organization resource. The expected response code is 200(OK) and content is a searchset Bundle resource with 2 Coverage resource entries and 1 Organization resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="Coverage"/>  
                <description value="XIS Server search operation for known Coverage resources, including the .payor reference Organization resource."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="?_include=Coverage:payor:Patient&amp;_include=Coverage:payor:Organization"/> 
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>  
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 4 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 4"/>  
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${coverage-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="03-ServeBgZ-TreatmentDirective"> 
        <name value="03-ServeBgZ-TreatmentDirective"/>  
        <description value="Test XIS Server search operation for known Consent resource with a category code for TreatmentDirective of person 1. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 Consent resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="Consent"/>  
                <description value="XIS Server search operation for known Consent resources with a SNOMED category code for TreatmentDirective."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="?category=http://snomed.info/sct|11291000146105"/>
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is greater than the number of entries in the Bundle." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &gt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 1 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 1"/>  
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${treatmentdirective-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test> 
    <test id="04-ServeBgZ-AdvanceDirective"> 
        <name value="04-ServeBgZ-AdvanceDirective"/>  
        <description value="Test XIS Server search operation for known Consent resource with a category code for AdvanceDirective of person 1. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 Consent resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="Consent"/>  
                <description value="XIS Server search operation for known Consent resources with a SNOMED category code for AdvanceDirective."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="?category=http://snomed.info/sct|11341000146107"/> 
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is greater than the number of entries in the Bundle." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &gt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 1 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 1"/>  
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${advancedirective-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="05-ServeBgZ-FunctionalOrMentalStatus"> 
        <name value="05-ServeBgZ-FunctionalOrMentalStatus"/>  
        <description value="Test XIS Server search operation for last known Observation resource with a code for FunctionalOrMentalStatus of person 1. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 Observation resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="Observation"/>  
                <description value="XIS Server search operation for last known Observation resource with a SNOMED code for FunctionalOrMentalStatus."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="/$lastn?category=http://snomed.info/sct|118228005,http://snomed.info/sct|384821006"/> 
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is greater than the number of entries in the Bundle." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &gt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 1 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 1"/>  
            </assert> 
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${functionalstatus-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="06-ServeBgZ-Problem"> 
        <name value="06-ServeBgZ-Problem"/>  
        <description value="Test XIS Server search operation for all known Condition resources of person 1. The expected response code is 200(OK) and content is a searchset Bundle resource with 6 Condition resource entries, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="Condition"/>  
                <description value="XIS Server search operation for all known Condition resources."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is greater than the number of entries in the Bundle." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &gt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 6 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 6"/>
                <warningOnly value="true"/>
            </assert> 
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${condition-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="07-ServeBgZ-LivingSituation"> 
        <name value="07-ServeBgZ-LivingSituation"/>  
        <description value="Test XIS Server search operation for the last known Observation resrouce with a SNOMED code for LivingSituation of person 1. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 Observation resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="Observation"/>  
                <description value="XIS Server search operation for all known Observation resources."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="/$lastn?code=http://snomed.info/sct|365508006"/> 
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is greater than the number of entries in the Bundle." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &gt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 1 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 1"/>  
            </assert> 
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${livingsituation-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="08-ServeBgZ-DrugUse"> 
        <name value="08-ServeBgZ-DrugUse"/>  
        <description value="Test XIS Server search operation for all known Observation resrouces with a SNOMED code for DrugUse of person 1. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 Observation resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="Observation"/>  
                <description value="XIS Server search operation for all known Observation resources with a SNOMED code for DrugUse."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="?code=http://snomed.info/sct|228366006"/> 
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is greater than the number of entries in the Bundle." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &gt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 1 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 1"/>  
            </assert> 
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${druguse-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="09-ServeBgZ-AlcoholUse"> 
        <name value="09-ServeBgZ-AlcoholUse"/>  
        <description value="Test XIS Server search operation for all known Observation resrouces with a SNOMED code for AlcoholUse of person 1. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 Observation resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="Observation"/>  
                <description value="XIS Server search operation for all known Observation resources with a SNOMED code for AlcoholUse."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="?code=http://snomed.info/sct|228273003"/>
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is greater than the number of entries in the Bundle." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &gt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 1 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 1"/>  
            </assert> 
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${alcoholuse-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="10-ServeBgZ-TobaccoUse"> 
        <name value="10-ServeBgZ-TobaccoUse"/>  
        <description value="Test XIS Server search operation for all known Observation resrouces with a SNOMED code for TobaccoUse of person 1. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 Observation resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="Observation"/>  
                <description value="XIS Server search operation for all known Observation resources with a SNOMED code for Tobaccouse."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="?code=http://snomed.info/sct|365980008"/> 
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is greater than the number of entries in the Bundle." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &gt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 1 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 1"/>  
            </assert> 
        </action> 
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${tobaccouse-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="11-ServeBgZ-NutritionAdvice"> 
        <name value="11-ServeBgZ-NutritionAdvice"/>  
        <description value="Test XIS Server search operation for all known NutritionOrder resources with an active status of person 1. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 NutritionResource resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="NutritionOrder"/>  
                <description value="XIS Server search operation for all known NutritionOrder resources with an active status."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="?status=active"/>
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is greater than the number of entries in the Bundle." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &gt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 1 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 1"/>  
            </assert> 
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${nutritionadvice-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="12-ServeBgZ-Alert"> 
        <name value="12-ServeBgZ-Alert"/>  
        <description value="Test XIS Server search operation for all Flag resources of person 1. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 Flag resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="Flag"/>  
                <description value="XIS Server search operation for all Flag resources."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is greater than the number of entries in the Bundle." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &gt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 1 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 1"/>  
            </assert> 
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${flag-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="13-ServeBgZ-AllergyIntolerance"> 
        <name value="13-ServeBgZ-AllergyIntolerance"/>  
        <description value="Test XIS Server search operation for all AllergyIntolerance resources of person 1. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 AllergyIntolerance resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="AllergyIntolerance"/>  
                <description value="XIS Server search operation for all AllergyIntolerance resources."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is greater than the number of entries in the Bundle." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &gt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 1 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 1"/>  
            </assert> 
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${allergyintolerance-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="14-ServeBgZ-MedicationUse"> 
        <name value="14-ServeBgZ-MedicationUse"/>  
        <description value="Test XIS Server search operation for all MedicationStatement resources with a category code for MedicationUse of person 1, including the Medication resource. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 MedicationStatement resource entry and 1 Medication resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="MedicationStatement"/>  
                <description value="XIS Server search operation for all MedicationStatement resources with a category code for MedicationUse and include Medication resources."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="?category=urn:oid:2.16.840.1.113883.2.4.3.11.60.20.77.5.3|6&amp;_include=MedicationStatement:medication"/> 
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 2 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 2"/>  
            </assert> 
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${medicationuse-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="15-ServeBgZ-MedicationAgreement"> 
        <name value="15-ServeBgZ-MedicationAgreement"/>  
        <description value="Test XIS Server search operation for all MedicationRequest resources with a category code for MedicationAgreement of person 1, including the Medication resource. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 MedicationRequest resource entry and 1 Medication resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="MedicationRequest"/>  
                <description value="XIS Server search operation for all MedicationRequest resources with a category code for MedicationAgreement and include Medication resources."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="?category=http://snomed.info/sct|16076005&amp;_include=MedicationRequest:medication"/> 
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 2 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 2"/>  
            </assert> 
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${medicationagreement-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="16-ServeBgZ-AdministrationAgreement"> 
        <name value="16-ServeBgZ-AdministrationAgreement"/>  
        <description value="Test XIS Server search operation for all MedicationDispense resources with a category code for AdministrationAgreement of person 1, including the Medication resource. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 MedicationDispense resource entry and 1 Medication resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="MedicationDispense"/>  
                <description value="XIS Server search operation for all MedicationRequest resources with a category code for MedicationAgreement and include Medication resources."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="?category=http://snomed.info/sct|422037009&amp;_include=MedicationDispense:medication"/>
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 2 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 2"/>  
            </assert> 
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${administrationagreement-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="17-ServeBgZ-MedicalDevice"> 
        <name value="17-ServeBgZ-MedicalDevice"/>  
        <description value="Test XIS Server search operation for all DeviceUseStatement resources of person 1, including Device resources. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 DeviceUseStatement resource entry and 1 Device resource, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="DeviceUseStatement"/>  
                <description value="XIS Server search operation for all DeviceUseStatement and include Device resources."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="?_include=DeviceUseStatement:device"/>
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 2 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 2"/>  
            </assert> 
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${medicaldeviceusestatement-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="18-ServeBgZ-Vaccination"> 
        <name value="18-ServeBgZ-Vaccination"/>  
        <description value="Test XIS Server search operation for all Immunization resources with a completed status of person 1. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 Immunization resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="Immunization"/>  
                <description value="XIS Server search operation for all Immunization resources that are completed."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="?status=completed"/>
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is greater than the number of entries in the Bundle." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &gt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 1 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 1"/>  
            </assert> 
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${vaccination-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="19-ServeBgZ-BloodPressure"> 
        <name value="19-ServeBgZ-BloodPressure"/>  
        <description value="Test XIS Server search operation for the last known Obervation resources with a code for BloodPressure of person 1. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 Observation resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="Observation"/>  
                <description value="XIS Server search operation for the last kown Observation resource with a code for BloodPressure."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="/$lastn?code=http://loinc.org|85354-9"/>
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is greater than the number of entries in the Bundle." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &gt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 1 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 1"/>  
            </assert> 
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${bloodpressure-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="20-ServeBgZ-BodyWeight"> 
        <name value="20-ServeBgZ-BodyWeight"/>  
        <description value="Test XIS Server search operation for the last known Obervation resources with a code for BodyWeight of person 1. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 Observation resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="Observation"/>  
                <description value="XIS Server search operation for the last kown Observation resource with a code for BodyWeight."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="/$lastn?code=http://loinc.org|29463-7"/>
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is greater than the number of entries in the Bundle." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &gt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 1 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 1"/>  
            </assert> 
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${bodyweight-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="21-ServeBgZ-BodyHeight"> 
        <name value="21-ServeBgZ-BodyHeight"/>  
        <description value="Test XIS Server search operation for the last known Obervation resources with a code for BodyHeight of person 1. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 Observation resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="Observation"/>  
                <description value="XIS Server search operation for the last kown Observation resource with a code for BodyHeight."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="/$lastn?code=http://loinc.org|8302-2,http://loinc.org|8306-3,http://loinc.org|8308-9"/>
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is greater than the number of entries in the Bundle." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &gt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 1 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 1"/>  
            </assert> 
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${bodyheight-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="22-ServeBgZ-LaboratoryTestResult"> 
        <name value="22-ServeBgZ-LaboratoryTestResult"/>  
        <description value="Test XIS Server search operation for the last known Obervation resources with a category for LaboratoryTestResult, specific for Chemistry observations of person 1, including the referenced Specimem resource. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 Observation resource entry and 1 Specimen resource, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="Observation"/>  
                <description value="XIS Server search operation for the last kown Observation resource with a category for LaboratoryTestResult, specific for Chemistry observations, including the referenced Specimem resource."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="/$lastn?category=http://snomed.info/sct|275711006&amp;_include=Observation:related-target&amp;_include=Observation:specimen"/>
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 2 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 2"/>  
            </assert> 
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${labresult-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="23-ServeBgZ-Procedure"> 
        <name value="23-ServeBgZ-Procedure"/>  
        <description value="Test XIS Server search operation for all known Procedure resources with a category for surgical procedures of person 1. The expected response code is 200(OK) and content is a searchset Bundle resource with 2 Procedure resource entries, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="Procedure"/>  
                <description value="XIS Server search operation for Procedure resources with a category for surgical procedures."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="?category=http://snomed.info/sct|387713003"/>
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is greater than the number of entries in the Bundle." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &gt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 2 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 2"/>  
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${procedure-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="24-ServeBgZ-Contact"> 
        <name value="24-ServeBgZ-Contact"/>  
        <description value="Test XIS Server search operation for all known Encounter resources with a class for hospital admissions of person 1. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 Encounter resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="Encounter"/>  
                <description value="XIS Server search operation for Encounter resources with a class for hospital admissions."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="?class=http://hl7.org/fhir/v3/ActCode|IMP,http://hl7.org/fhir/v3/ActCode|ACUTE,http://hl7.org/fhir/v3/ActCode|NONAC"/>
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is greater than the number of entries in the Bundle." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &gt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 1 entry."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 1"/>  
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${encounter-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="25-ServeBgZ-PlannedCareActivity-ProcedureRequest"> 
        <name value="25-ServeBgZ-PlannedCareActivity-ProcedureRequest"/>  
        <description value="Test XIS Server search operation for all known ProcedureRequest resources with a active status of person 1. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 ProcedureRequest resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="ProcedureRequest"/>  
                <description value="XIS Server search operation for ProcedureRequest resources with a active status."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="?status=active"/>
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is greater than the number of entries in the Bundle." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &gt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 1 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 1"/>  
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${procedurerequest-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="26-ServeBgZ-PlannedCareActivity-ImmunizationRecommendation"> 
        <name value="26-ServeBgZ-PlannedCareActivity-ImmunizationRecommendation"/>  
        <description value="Test XIS Server search operation for all known ImmunizationRecommendation resources of person 1. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 ImmunizationRecommendation resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="ImmunizationRecommendation"/>  
                <description value="XIS Server search operation for ImmunizationRecommendation resources."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is greater than the number of entries in the Bundle." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &gt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 1 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 1"/>  
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${vaccinationrequest-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="27-ServeBgZ-PlannedCareActivity-Appointment"> 
        <name value="27-ServeBgZ-PlannedCareActivity-Appointment"/>  
        <description value="Test XIS Server search operation for all known future Appointment resources, with a booked, pending or proposed status of person 1. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 Appointment resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="Appointment"/>  
                <description value="XIS Server search operation for Appointment resources with a booked, pending or proposed status."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="?status=booked,pending,proposed"/>
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is greater than the number of entries in the Bundle." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &gt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 1 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 1"/>  
            </assert> 
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${appointment-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
    <test id="28-RetrieveBgZ-PlannedCareActivity-DeviceRequest"> 
        <name value="28-RetrieveBgZ-PlannedCareActivity-DeviceRequest"/>  
        <description value="Test XIS Server retrieve search operation for all known DeviceRequest resources, with a active status of person 1, including the Device resource. The expected response code is 200(OK) and content is a searchset Bundle resource with 1 DeviceRequest resource entry and 1 Device resource entry, returned in XML format."/>  
        <action> 
            <operation> 
                <type> 
                    <system value="http://hl7.org/fhir/testscript-operation-codes"/>  
                    <code value="search"/> 
                </type>  
                <resource value="DeviceRequest"/>  
                <description value="XIS Server search operation for DeviceRequest resources with an active status, including the Device resource."/>  
                <accept value="xml"/>  
                <contentType value="none" />
                <params value="?status=active&amp;_include=DeviceRequest:device"/>
                <requestHeader>  <!-- 0..* Each operation can have one or more header elements -->
                    <field value="Authorization"/><!-- 1..1 HTTP header field name: OAuth access token -->
                    <value value="${patient-token-id}"/><!-- 1..1 HTTP headerfield value: UUID4 -->
                </requestHeader>
            </operation> 
        </action>        
        <action> 
            <assert> 
                <description value="Confirm that the returned HTTP status is 200(OK)."/>  
                <direction value="response"/>  
                <responseCode value="200"/> 
            </assert> 
        </action> 
        <!--<action> 
            <assert> 
                <description value="Confirm that the returned HTTP Header Content-Type contains the FHIR mime-type 'application/fhir+xml'."/>  
                <direction value="response"/>  
                <contentType value="xml"/> 
            </assert> 
        </action>-->  
        <action> 
            <assert> 
                <description value="Confirm that the returned resource type is Bundle."/>  
                <direction value="response"/>  
                <resource value="Bundle"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the returned Bundle type is searchset."/>  
                <direction value="response"/>  
                <expression value="Bundle.type"/>  
                <operator value="equals"/>             
                <value value="searchset"/> 
            </assert> 
        </action>  
        <action>
            <assert>
                <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total." />
                <direction value="response" />
                <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()" />
            </assert>
        </action>
        <action> 
            <assert> 
                <description value="Confirm that the returned searchset Bundle contains 2 entries."/>  
                <direction value="response"/>  
                <expression value="Bundle.entry.count() = 2"/>  
            </assert> 
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.where(entry.empty() or entry.resource[0].meta.profile).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the first returned resource contains a meta.profile tag matching the expected profile." />
                <direction value="response" />
                <expression value="Bundle.entry.resource[0].meta.profile" />
                <operator value="equals"/>
                <value value="${devicerequest-profile}"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the all returned resources contain a meta.profile tag." />
                <direction value="response" />
                <expression value="Bundle.entry.resource.meta.profile.count() = Bundle.entry.resource.count()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag." />
                <direction value="response" />
                <validateProfileId value="Bundle-profile" />
            </assert>
        </action>
    </test>
</TestScript>